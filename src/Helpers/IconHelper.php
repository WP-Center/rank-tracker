<?php

namespace WPRankTracker\Helpers;

use Illuminate\Container\Container;

class IconHelper extends Container
{
    /**
     * This method renders an icon from the images folder.
     *
     * @param string $icon This should be icon name and extension.
     *
     * @return void
     */
    public function getIcon(string $icon): void
    {
        include WPRT_PLUGIN_DIR_PATH . 'build/images/icons/' . $icon;
    }

    public function getIconUrl(string $icon): string
    {
        return WPRT_PLUGIN_URL . 'build/images/icons/' . $icon;
    }
    
    public function getCountryListWithFlags() 
    {
        return [
            'AF' => 'ğŸ‡¦ğŸ‡«', 'AO' => 'ğŸ‡¦ğŸ‡´', 'AL' => 'ğŸ‡¦ğŸ‡±', 'AD' => 'ğŸ‡¦ğŸ‡©', 'AE' => 'ğŸ‡¦ğŸ‡ª', 'AR' => 'ğŸ‡¦ğŸ‡·', 'AM' => 'ğŸ‡¦ğŸ‡²', 'AG' => 'ğŸ‡¦ğŸ‡¬', 'AU' => 'ğŸ‡¦ğŸ‡º', 'AT' => 'ğŸ‡¦ğŸ‡¹', 'AZ' => 'ğŸ‡¦ğŸ‡¿', 'BI' => 'ğŸ‡§ğŸ‡®', 'BE' => 'ğŸ‡§ğŸ‡ª', 'BJ' => 'ğŸ‡§ğŸ‡¯', 'BF' => 'ğŸ‡§ğŸ‡«', 'BD' => 'ğŸ‡§ğŸ‡©', 'BG' => 'ğŸ‡§ğŸ‡¬', 'BH' => 'ğŸ‡§ğŸ‡­', 'BS' => 'ğŸ‡§ğŸ‡¸', 'BA' => 'ğŸ‡§ğŸ‡¦', 'BY' => 'ğŸ‡§ğŸ‡¾', 'BZ' => 'ğŸ‡§ğŸ‡¿', 'BO' => 'ğŸ‡§ğŸ‡´', 'BR' => 'ğŸ‡§ğŸ‡·', 'BB' => 'ğŸ‡§ğŸ‡§', 'BN' => 'ğŸ‡§ğŸ‡³', 'BT' => 'ğŸ‡§ğŸ‡¹', 'BW' => 'ğŸ‡§ğŸ‡¼', 'CF' => 'ğŸ‡¨ğŸ‡«', 'CA' => 'ğŸ‡¨ğŸ‡¦', 'CH' => 'ğŸ‡¨ğŸ‡­', 'CL' => 'ğŸ‡¨ğŸ‡±', 'CN' => 'ğŸ‡¨ğŸ‡³', 'CI' => 'ğŸ‡¨ğŸ‡®', 'CM' => 'ğŸ‡¨ğŸ‡²', 'CD' => 'ğŸ‡¨ğŸ‡©', 'CG' => 'ğŸ‡¨ğŸ‡¬', 'CO' => 'ğŸ‡¨ğŸ‡´', 'KM' => 'ğŸ‡°ğŸ‡²', 'CV' => 'ğŸ‡¨ğŸ‡»', 'CR' => 'ğŸ‡¨ğŸ‡·', 'CU' => 'ğŸ‡¨ğŸ‡º', 'CY' => 'ğŸ‡¨ğŸ‡¾', 'CZ' => 'ğŸ‡¨ğŸ‡¿', 'DE' => 'ğŸ‡©ğŸ‡ª', 'DJ' => 'ğŸ‡©ğŸ‡¯', 'DM' => 'ğŸ‡©ğŸ‡²', 'DK' => 'ğŸ‡©ğŸ‡°', 'DO' => 'ğŸ‡©ğŸ‡´', 'DZ' => 'ğŸ‡©ğŸ‡¿', 'EC' => 'ğŸ‡ªğŸ‡¨', 'EG' => 'ğŸ‡ªğŸ‡¬', 'ER' => 'ğŸ‡ªğŸ‡·', 'ES' => 'ğŸ‡ªğŸ‡¸', 'EE' => 'ğŸ‡ªğŸ‡ª', 'ET' => 'ğŸ‡ªğŸ‡¹', 'FI' => 'ğŸ‡«ğŸ‡®', 'FJ' => 'ğŸ‡«ğŸ‡¯', 'FR' => 'ğŸ‡«ğŸ‡·', 'FM' => 'ğŸ‡«ğŸ‡²', 'GA' => 'ğŸ‡¬ğŸ‡¦', 'GB' => 'ğŸ‡¬ğŸ‡§', 'GE' => 'ğŸ‡¬ğŸ‡ª', 'GH' => 'ğŸ‡¬ğŸ‡­', 'GN' => 'ğŸ‡¬ğŸ‡³', 'GM' => 'ğŸ‡¬ğŸ‡²', 'GW' => 'ğŸ‡¬ğŸ‡¼', 'GQ' => 'ğŸ‡¬ğŸ‡¶', 'GR' => 'ğŸ‡¬ğŸ‡·', 'GD' => 'ğŸ‡¬ğŸ‡©', 'GT' => 'ğŸ‡¬ğŸ‡¹', 'GY' => 'ğŸ‡¬ğŸ‡¾', 'HN' => 'ğŸ‡­ğŸ‡³', 'HR' => 'ğŸ‡­ğŸ‡·', 'HT' => 'ğŸ‡­ğŸ‡¹', 'HU' => 'ğŸ‡­ğŸ‡º', 'ID' => 'ğŸ‡®ğŸ‡©', 'IN' => 'ğŸ‡®ğŸ‡³', 'IE' => 'ğŸ‡®ğŸ‡ª', 'IR' => 'ğŸ‡®ğŸ‡·', 'IQ' => 'ğŸ‡®ğŸ‡¶', 'IS' => 'ğŸ‡®ğŸ‡¸', 'IL' => 'ğŸ‡®ğŸ‡±', 'IT' => 'ğŸ‡®ğŸ‡¹', 'JM' => 'ğŸ‡¯ğŸ‡²', 'JO' => 'ğŸ‡¯ğŸ‡´', 'JP' => 'ğŸ‡¯ğŸ‡µ', 'KZ' => 'ğŸ‡°ğŸ‡¿', 'KE' => 'ğŸ‡°ğŸ‡ª', 'KG' => 'ğŸ‡°ğŸ‡¬', 'KH' => 'ğŸ‡°ğŸ‡­', 'KI' => 'ğŸ‡°ğŸ‡®', 'KN' => 'ğŸ‡°ğŸ‡³', 'KR' => 'ğŸ‡°ğŸ‡·', 'KW' => 'ğŸ‡°ğŸ‡¼', 'LA' => 'ğŸ‡±ğŸ‡¦', 'LB' => 'ğŸ‡±ğŸ‡§', 'LR' => 'ğŸ‡±ğŸ‡·', 'LY' => 'ğŸ‡±ğŸ‡¾', 'LC' => 'ğŸ‡±ğŸ‡¨', 'LI' => 'ğŸ‡±ğŸ‡®', 'LK' => 'ğŸ‡±ğŸ‡°', 'LS' => 'ğŸ‡±ğŸ‡¸', 'LT' => 'ğŸ‡±ğŸ‡¹', 'LU' => 'ğŸ‡±ğŸ‡º', 'LV' => 'ğŸ‡±ğŸ‡»', 'MA' => 'ğŸ‡²ğŸ‡¦', 'MC' => 'ğŸ‡²ğŸ‡¨', 'MD' => 'ğŸ‡²ğŸ‡©', 'MG' => 'ğŸ‡²ğŸ‡¬', 'MV' => 'ğŸ‡²ğŸ‡»', 'MX' => 'ğŸ‡²ğŸ‡½', 'MH' => 'ğŸ‡²ğŸ‡­', 'MK' => 'ğŸ‡²ğŸ‡°', 'ML' => 'ğŸ‡²ğŸ‡±', 'MT' => 'ğŸ‡²ğŸ‡¹', 'MM' => 'ğŸ‡²ğŸ‡²', 'ME' => 'ğŸ‡²ğŸ‡ª', 'MN' => 'ğŸ‡²ğŸ‡³', 'MZ' => 'ğŸ‡²ğŸ‡¿', 'MR' => 'ğŸ‡²ğŸ‡·', 'MU' => 'ğŸ‡²ğŸ‡º', 'MW' => 'ğŸ‡²ğŸ‡¼', 'MY' => 'ğŸ‡²ğŸ‡¾', 'NA' => 'ğŸ‡³ğŸ‡¦', 'NE' => 'ğŸ‡³ğŸ‡ª', 'NG' => 'ğŸ‡³ğŸ‡¬', 'NI' => 'ğŸ‡³ğŸ‡®', 'NL' => 'ğŸ‡³ğŸ‡±', 'NO' => 'ğŸ‡³ğŸ‡´', 'NP' => 'ğŸ‡³ğŸ‡µ', 'NR' => 'ğŸ‡³ğŸ‡·', 'NZ' => 'ğŸ‡³ğŸ‡¿', 'OM' => 'ğŸ‡´ğŸ‡²', 'PK' => 'ğŸ‡µğŸ‡°', 'PA' => 'ğŸ‡µğŸ‡¦', 'PE' => 'ğŸ‡µğŸ‡ª', 'PH' => 'ğŸ‡µğŸ‡­', 'PW' => 'ğŸ‡µğŸ‡¼', 'PG' => 'ğŸ‡µğŸ‡¬', 'PL' => 'ğŸ‡µğŸ‡±', 'KP' => 'ğŸ‡°ğŸ‡µ', 'PT' => 'ğŸ‡µğŸ‡¹', 'PY' => 'ğŸ‡µğŸ‡¾', 'QA' => 'ğŸ‡¶ğŸ‡¦', 'RO' => 'ğŸ‡·ğŸ‡´', 'RU' => 'ğŸ‡·ğŸ‡º', 'RW' => 'ğŸ‡·ğŸ‡¼', 'SA' => 'ğŸ‡¸ğŸ‡¦', 'SD' => 'ğŸ‡¸ğŸ‡©', 'SN' => 'ğŸ‡¸ğŸ‡³', 'SG' => 'ğŸ‡¸ğŸ‡¬', 'SB' => 'ğŸ‡¸ğŸ‡§', 'SL' => 'ğŸ‡¸ğŸ‡±', 'SV' => 'ğŸ‡¸ğŸ‡»', 'SM' => 'ğŸ‡¸ğŸ‡²', 'SO' => 'ğŸ‡¸ğŸ‡´', 'RS' => 'ğŸ‡·ğŸ‡¸', 'SS' => 'ğŸ‡¸ğŸ‡¸', 'ST' => 'ğŸ‡¸ğŸ‡¹', 'SR' => 'ğŸ‡¸ğŸ‡·', 'SK' => 'ğŸ‡¸ğŸ‡°', 'SI' => 'ğŸ‡¸ğŸ‡®', 'SE' => 'ğŸ‡¸ğŸ‡ª', 'SZ' => 'ğŸ‡¸ğŸ‡¿', 'SC' => 'ğŸ‡¸ğŸ‡¨', 'SY' => 'ğŸ‡¸ğŸ‡¾', 'TD' => 'ğŸ‡¹ğŸ‡©', 'TG' => 'ğŸ‡¹ğŸ‡¬', 'TH' => 'ğŸ‡¹ğŸ‡­', 'TJ' => 'ğŸ‡¹ğŸ‡¯', 'TM' => 'ğŸ‡¹ğŸ‡²', 'TL' => 'ğŸ‡¹ğŸ‡±', 'TO' => 'ğŸ‡¹ğŸ‡´', 'TT' => 'ğŸ‡¹ğŸ‡¹', 'TN' => 'ğŸ‡¹ğŸ‡³', 'TR' => 'ğŸ‡¹ğŸ‡·', 'TV' => 'ğŸ‡¹ğŸ‡»', 'TZ' => 'ğŸ‡¹ğŸ‡¿', 'UG' => 'ğŸ‡ºğŸ‡¬', 'UA' => 'ğŸ‡ºğŸ‡¦', 'UY' => 'ğŸ‡ºğŸ‡¾', 'US' => 'ğŸ‡ºğŸ‡¸', 'UZ' => 'ğŸ‡ºğŸ‡¿', 'VA' => 'ğŸ‡»ğŸ‡¦', 'VC' => 'ğŸ‡»ğŸ‡¨', 'VE' => 'ğŸ‡»ğŸ‡ª', 'VN' => 'ğŸ‡»ğŸ‡³', 'VU' => 'ğŸ‡»ğŸ‡º', 'WS' => 'ğŸ‡¼ğŸ‡¸', 'YE' => 'ğŸ‡¾ğŸ‡ª', 'ZA' => 'ğŸ‡¿ğŸ‡¦', 'ZM' => 'ğŸ‡¿ğŸ‡²', 'ZW' => 'ğŸ‡¿ğŸ‡¼',
        ];
    }

    public function getFlagByCountry($country = '')
    {
        if ($country) {
            $countryList = $this->getCountryListWithFlags();
            foreach ($countryList as $countryCode => $flag) {
                if ($countryCode === $country) {
                    return $flag;
                }
            }
        }

        return $country;
    }
}
